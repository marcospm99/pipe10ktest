Page 1           Source Listing                                                                
2023-01-27 11:38                                 /tmp/ifortG7zxyK.i90

./program/velocity.f90(59): remark #7712: This variable has not been used.   [A
      double precision :: a
--------------------------^
./program/velocity.f90(60): remark #7712: This variable has not been used.   [N
      integer :: n
-----------------^
./program/velocity.f90(61): remark #7712: This variable has not been used.   [NH
      integer :: nh,k,m
-----------------^
./program/velocity.f90(61): remark #7712: This variable has not been used.   [K
      integer :: nh,k,m
--------------------^
./program/velocity.f90(61): remark #7712: This variable has not been used.   [M
      integer :: nh,k,m
----------------------^
./program/velocity.f90(262): remark #7712: This variable has not been used.   [S
      double precision :: d, s, a_, b(0:i_M*i_Mp)
-----------------------------^
./program/velocity.f90(262): remark #7712: This variable has not been used.   [B
      double precision :: d, s, a_, b(0:i_M*i_Mp)
------------------------------------^
./program/velocity.f90(427): remark #7712: This variable has not been used.   [DT_
      double precision :: d,mx, dt(3),dt_(3), r(i_N)
--------------------------------------^

Page 2           Source Listing                  VEL_PRECOMPUTE
2023-01-27 11:38                                 /tmp/ifortG7zxyK.i90

      1 # 1 "./program/velocity.f90"
      2 !*************************************************************************
      3 !
      4 !
      5 !*************************************************************************
      6 # 1 "./program/../parallel.h" 1 
      7 
      8 
      9 
     10  
     11 
     12 
     13 
     14  
     15 
     16  
     17 
     18 # 14
     19 
     20 
     21 
     22 
     23 
     24 
     25  
     26 # 23
     27 
     28 
     29  
     30 # 44
     31 
     32  
     33 
     34 
     35 
     36 # 54
     37 
     38          
     39 
     40 
     41  
     42 
     43  
     44 
     45 
     46 # 6 "./program/velocity.f90" 2 
     47  module velocity
     48 !*************************************************************************
     49    use variables
     50    use transform
     51    use timestep
     52    implicit none
     53    save
     54 
     55    type (phys) :: vel_r
     56    type (phys) :: vel_t
     57    type (phys) :: vel_z

Page 3           Source Listing                  VEL_PRECOMPUTE
2023-01-27 11:38                                 ./program/velocity.f90

     58    type (phys) :: vel_curlr
     59    type (phys) :: vel_curlt
     60    type (phys) :: vel_curlz
     61    type (coll) :: vel_ur
     62    type (coll) :: vel_ut
     63    type (coll) :: vel_uz
     64    type (coll) :: vel_Nr
     65    type (coll) :: vel_Nt
     66    type (coll) :: vel_Nz
     67    double precision :: vel_nu
     68    double precision :: vel_Pr0
     69    double precision :: vel_U(i_N)
     70    double precision :: vel_Up(i_N)
     71 
     72    type (lumesh), private :: LDp(0:i_pH1), LDm(0:i_pH1)
     73    type (lumesh), private :: LDz(0:i_pH1), LNp(0:i_pH1)
     74    type (mesh),   private :: Ltp(0:i_pH1), Ltm(0:i_pH1)
     75    type (mesh),   private :: Ltz(0:i_pH1)
     76    type (coll),   private :: Nr_,Nt_,Nz_,ur_,ut_,uz_
     77 
     78    type (coll), private :: c1,c2,c3
     79    
     80  contains
     81 
     82 !------------------------------------------------------------------------
     83 !  initialise velocity/pressure field
     84 !------------------------------------------------------------------------
     85    subroutine vel_precompute()
     86       call var_coll_init(vel_ur)
     87       call var_coll_init(vel_ut)
     88       call var_coll_init(vel_uz)
     89       vel_nu  = 1d0
     90       vel_Pr0 = 0d0
     91       vel_U   = 1d0 - mes_D%r(:,2)
     92       vel_Up  = - 2d0*mes_D%r(:,1)
     93    end subroutine vel_precompute

Page 4           Source Listing                  VEL_PRECOMPUTE
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                                   
                                         
 velocity_mp_vel_precompute_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 MES_D                      Local  91       RDOM            83272       scalar   SAVE             91,92,204,208,320,322,330,385,471,
                                                                                                  474,475                           
 VAR_COLL_INIT              Subr   86                                                             86,87,88,232,233,234              
 VEL_NU                     Local  89       R(8)            8           scalar   SAVE             89,168,175                        
 VEL_PR0                    Local  90       R(8)            8           scalar   SAVE             90,211,385,386,387                
 VEL_PRECOMPUTE             Subr   85                                                                                               
 VEL_U                      Local  91       R(8)            8     1     192      SAVE             91,373,492                        
 VEL_UP                     Local  92       R(8)            8     1     192      SAVE             92,371                            
 VEL_UR                     Local  86       COLL            16090       scalar   SAVE             86,104,106,108,110,265,271,276,281
                                                            39872                                 ,282,287,288,343,345,374,375,379,3
                                                                                                  81,399,400,405,408,412,417,418,431
                                                                                                  ,448,456                          
 VEL_UT                     Local  87       COLL            16090       scalar   SAVE             87,104,106,108,110,265,272,276,283
                                                            39872                                 ,284,289,290,343,345,376,377,399,4
                                                                                                  01,406,409,412,419,432,449,457    
 VEL_UZ                     Local  88       COLL            16090       scalar   SAVE             88,104,106,108,110,208,210,266,273
                                                            39872                                 ,276,285,286,291,292,343,345,378,3
                                                                                                  80,385,402,407,410,420,433,450,458


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 RDOM.R                     R(8)            8     24       2     1344                      91,92,330,471                      

Page 5           Source Listing                  VEL_PRECOMPUTE
2023-01-27 11:38                                 ./program/velocity.f90

     94 
     95 
     96 !------------------------------------------------------------------------
     97 !   symmetric, A(th)=A(-th);  s&r, A(th,z)=A(-th,z+L/2)
     98 !------------------------------------------------------------------------
     99    subroutine vel_imposesym()   
    100       double precision :: a
	..........................1 
(1) This variable has not been used.   [A]

    101       integer :: n
	.................1 
(1) This variable has not been used.   [N]

    102       integer :: nh,k,m
	.................1..2.3 
(1) This variable has not been used.   [NH]

(2) This variable has not been used.   [K]

(3) This variable has not been used.   [M]

    103 
    104       call var_imposesym(0, vel_ur,vel_ut,vel_uz)
    105       if(b_mirrorsym)  &
    106          call var_imposesym(1, vel_ur,vel_ut,vel_uz)
    107       if(b_shiftrefl)  &
    108          call var_imposesym(2, vel_ur,vel_ut,vel_uz)
    109       if(b_shiftrott)  &
    110          call var_imposesym(3, vel_ur,vel_ut,vel_uz)
    111 
    112    end subroutine vel_imposesym 

Page 6           Source Listing                  VEL_IMPOSESYM
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                                  
                                        
 velocity_mp_vel_imposesym_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 A                          Local  100      R(8)            8           scalar                                                      
 B_MIRRORSYM                Param  105      L(4)            4           scalar                    105                               
 B_SHIFTREFL                Param  107      L(4)            4           scalar                    107                               
 B_SHIFTROTT                Param  109      L(4)            4           scalar                    109                               
 K                          Local  102      I(4)            4           scalar                                                      
 M                          Local  102      I(4)            4           scalar                                                      
 N                          Local  101      I(4)            4           scalar                                                      
 NH                         Local  102      I(4)            4           scalar                                                      
 VAR_IMPOSESYM              Subr   104                                                            104,106,108,110                   
 VEL_IMPOSESYM              Subr   99                                                                                               

Page 7           Source Listing                  VEL_IMPOSESYM
2023-01-27 11:38                                 ./program/velocity.f90

    113 
    114 
    115 !------------------------------------------------------------------------
    116 !  convert
    117 !------------------------------------------------------------------------
    118    subroutine vel_rt2pm(r,t, up,um)
    119       type (coll), intent(in)  :: r,t
    120       type (coll), intent(out) :: up,um
    121       double precision :: rRe(i_N), rIm(i_N), tRe(i_N), tIm(i_N)
    122       integer :: nh,k,m
    123       nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    124          rRe = r%Re(:,nh)
    125          rIm = r%Im(:,nh)
    126          tRe = t%Re(:,nh)
    127          tIm = t%Im(:,nh)
    128          up%Re(:,nh) = rRe - tIm
    129          up%Im(:,nh) = rIm + tRe
    130          um%Re(:,nh) = rRe + tIm
    131          um%Im(:,nh) = rIm - tRe
    132       end do;  end do
    133    end subroutine vel_rt2pm


ENTRY POINTS

  Name                              
                                    
 velocity_mp_vel_rt2pm_             

Page 8           Source Listing                  VEL_RT2PM
2023-01-27 11:38 Symbol Table                    ./program/velocity.f90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 COLL                       Type   119                                  scalar                    61,62,63,64,65,66,76,78,119,120,13
                                                                                                  8,139,300,446                     
 I_K1                       Param  123      I(4)            4           scalar                    123,142,259,277,307,372           
 I_M1                       Param  123      I(4)            4           scalar                    123,142,259,277,307,372           
 I_N                        Param  121      I(4)            4           scalar                    69,70,121,140,192,200,201,202,230,
                                                                                                  236,240,244,248,311,320,322,368,38
                                                                                                  5,468,479,480                     
 K                          Local  122      I(4)            4           scalar                    123                               
 M                          Local  122      I(4)            4           scalar                    123                               
 NH                         Local  122      I(4)            4           scalar                    123,124,125,126,127,128,129,130,13
                                                                                                  1                                 
 R                          Dummy  118      COLL            16090       scalar   ARG,IN           124,125                           
                                                            39872                                                                   
 RIM                        Local  121      R(8)            8     1     192                       125,129,131                       
 RRE                        Local  121      R(8)            8     1     192                       124,128,130                       
 T                          Dummy  118      COLL            16090       scalar   ARG,IN           126,127                           
                                                            39872                                                                   
 TIM                        Local  121      R(8)            8     1     192                       127,128,130                       
 TRE                        Local  121      R(8)            8     1     192                       126,129,131                       
 UM                         Dummy  118      COLL            16090       scalar   ARG,OUT          130,131                           
                                                            39872                                                                   
 UP                         Dummy  118      COLL            16090       scalar   ARG,OUT          128,129                           
                                                            39872                                                                   
 VEL_RT2PM                  Subr   118                                                            251,270,398,399                   


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 COLL.IM                    R(8)            8     80451993 2     10056499                  125,127,129,131,144,146,148,150,24 
                                                  6              2                         4,246,254,282,284,286,288,290,292, 
                                                                                           314,315,318,322,325,327,374,375,37 
                                                                                           6,377,378,380,381,418,419,420      
 COLL.RE                    R(8)            8     0        2     10056499                  124,126,128,130,143,145,147,149,20 
                                                                 2                         8,210,236,238,240,242,248,252,253, 
                                                                                           281,283,285,287,289,291,313,316,31 
                                                                                           7,320,324,326,374,375,376,377,378, 
                                                                                           379,380,385,387,417                

Page 9           Source Listing                  VEL_RT2PM
2023-01-27 11:38                                 ./program/velocity.f90

    134 
    135 
    136    subroutine vel_pm2rt(up,um, r,t)
    137       implicit none
    138       type (coll), intent(in)  :: up,um
    139       type (coll), intent(out) :: r,t
    140       double precision :: pRe(i_N),mRe(i_N),pIm(i_N),mIm(i_N)
    141       integer :: nh,k,m
    142       nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    143          pRe = up%Re(:,nh)
    144          pIm = up%Im(:,nh)
    145          mRe = um%Re(:,nh)
    146          mIm = um%Im(:,nh)
    147          r%Re(:,nh) =  0.5d0 * (pRe + mRe)
    148          r%Im(:,nh) =  0.5d0 * (pIm + mIm)
    149          t%Re(:,nh) =  0.5d0 * (pIm - mIm)
    150          t%Im(:,nh) = -0.5d0 * (pRe - mRe)
    151       end do;  end do
    152    end subroutine vel_pm2rt


ENTRY POINTS

  Name                              
                                    
 velocity_mp_vel_pm2rt_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 K                          Local  141      I(4)            4           scalar                    142                               
 M                          Local  141      I(4)            4           scalar                    142                               
 MIM                        Local  140      R(8)            8     1     192                       146,148,149                       
 MRE                        Local  140      R(8)            8     1     192                       145,147,150                       
 NH                         Local  141      I(4)            4           scalar                    142,143,144,145,146,147,148,149,15
                                                                                                  0                                 
 PIM                        Local  140      R(8)            8     1     192                       144,148,149                       
 PRE                        Local  140      R(8)            8     1     192                       143,147,150                       
 R                          Dummy  136      COLL            16090       scalar   ARG,OUT          147,148                           
                                                            39872                                                                   
 T                          Dummy  136      COLL            16090       scalar   ARG,OUT          149,150                           
                                                            39872                                                                   
 UM                         Dummy  136      COLL            16090       scalar   ARG,IN           145,146                           
                                                            39872                                                                   
 UP                         Dummy  136      COLL            16090       scalar   ARG,IN           143,144                           
                                                            39872                                                                   
 VEL_PM2RT                  Subr   136                                                            265,412                           

Page 10          Source Listing                  VEL_PM2RT
2023-01-27 11:38                                 ./program/velocity.f90

    153    
    154 
    155 !------------------------------------------------------------------------
    156 !  precomputation of matrices for timestepping
    157 !------------------------------------------------------------------------
    158    subroutine vel_matrices()
    159       double precision :: d1, d2
    160       logical, save :: set = .false.
    161 
    162 ! pressure matrices
    163       if(.not.set) call tim_lumesh_init( 0,1,0d0,1d0, LNp)
    164       set = .true.
    165 
    166 ! lhs matrices for uz and u+,u-
    167       d1 =  1d0/tim_dt
    168       d2 = -d_implicit*vel_nu/d_Re 
    169       call tim_lumesh_init( 1,0,d1,d2, LDp)
    170       call tim_lumesh_init(-1,0,d1,d2, LDm)
    171       call tim_lumesh_init( 0,0,d1,d2, LDz)
    172 
    173 ! timestepping matrices for rhs
    174       d1 =  1d0/tim_dt
    175       d2 =  (1d0-d_implicit)*vel_nu/d_Re
    176       call tim_mesh_init( 1,d1,d2, Ltp)
    177       call tim_mesh_init(-1,d1,d2, Ltm)
    178       call tim_mesh_init( 0,d1,d2, Ltz)
    179 
    180 ! get influence matrices
    181       call vel_adjustFlux(0)
    182       call vel_adjPPE(0)
    183       
    184    end subroutine vel_matrices

Page 11          Source Listing                  VEL_MATRICES
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                                 
                                       
 velocity_mp_vel_matrices_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 D1                         Local  159      R(8)            8           scalar                    167,169,170,171,174,176,177,178   
 D2                         Local  159      R(8)            8           scalar                    168,169,170,171,175,176,177,178   
 D_IMPLICIT                 Param  168      R(8)            8           scalar                    168,175                           
 D_RE                       Local  168      R(8)            8           scalar   SAVE             168,175,211,387                   
 LDM                        Local  170      RECORD          20736 1     523776   PRIV,SAVE        72,170,241,409                    
 LDP                        Local  169      RECORD          20736 1     523776   PRIV,SAVE        72,169,237,408                    
 LDZ                        Local  171      RECORD          20736 1     523776   PRIV,SAVE        73,171,201,202,245,410            
 LNP                        Local  163      RECORD          20736 1     523776   PRIV,SAVE        73,163,249,268                    
 LTM                        Local  177      RECORD          14112 1     523776   PRIV,SAVE        74,177,401                        
 LTP                        Local  176      RECORD          14112 1     523776   PRIV,SAVE        74,176,400                        
 LTZ                        Local  178      RECORD          14112 1     523776   PRIV,SAVE        75,178,402                        
 SET                        Local  160      L(4)            4           scalar   SAVE             160,163,164                       
 TIM_DT                     Local  167      R(8)            8           scalar   SAVE             167,174                           
 TIM_LUMESH_INIT            Subr   163                                                            163,169,170,171                   
 TIM_MESH_INIT              Subr   176                                                            176,177,178                       
 VEL_MATRICES               Subr   158                                                                                              

Page 12          Source Listing                  VEL_MATRICES
2023-01-27 11:38                                 ./program/velocity.f90

    185    
    186 
    187 !------------------------------------------------------------------------
    188 !  adjust flux if fixed; fix to 1/2, i.e. disturbance has zero mean flux
    189 !------------------------------------------------------------------------
    190    subroutine vel_adjustFlux(F)
    191       integer, intent(in) :: F
    192       double precision, save :: Ui(i_N), d1,d2,d3
    193       integer :: info
    194       
    195       if(.not.b_const_flux) return
    196       if(mpi_rnk/=0) return
    197 
    198       if(F==0) then
    199          Ui(:)   = 1d0
    200          Ui(i_N) = 0d0
    201          call dgbtrs('N', i_N, i_KL, i_KL, 1, LDz(0)%M, 3*i_KL+1,  &
    202                      LDz(0)%ipiv, Ui, i_N, info)
    203          if(info/=0) stop 'vel_adjustFlux: err 1'
    204          d1 = 2d0*dot_product(Ui, mes_D%intrdr)
    205          if(d1==0d0) stop 'vel_adjustFlux: err 2'
    206       
    207       else if(F==1) then
    208          d2 = 2d0*dot_product(vel_uz%Re(:,0), mes_D%intrdr)
    209          d3 = -d2/d1
    210          vel_uz%Re(:,0) = vel_uz%Re(:,0) + d3*Ui
    211          vel_Pr0 = vel_Pr0 + d3*d_Re/4d0
    212       end if
    213 
    214    end subroutine vel_adjustFlux

Page 13          Source Listing                  VEL_ADJUSTFLUX
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                                   
                                         
 velocity_mp_vel_adjustflux_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 B_CONST_FLUX               Param  195      L(4)            4           scalar                    195,384                           
 D1                         Local  192      R(8)            8           scalar   SAVE             204,205,209                       
 D2                         Local  192      R(8)            8           scalar   SAVE             208,209                           
 D3                         Local  192      R(8)            8           scalar   SAVE             209,210,211                       
 DGBTRS                     Subr   201                                                            201                               
 DOT_PRODUCT                Func   204                                  scalar                    204,208                           
 F                          Dummy  190      I(4)            4           scalar   ARG,IN           198,207                           
 INFO                       Local  193      I(4)            4           scalar                    202,203                           
 I_KL                       Param  201      I(4)            4           scalar                    201,320,322,385                   
 MPI_RNK                    Local  196      I(4)            4           scalar   SAVE             196,384,416                       
 UI                         Local  192      R(8)            8     1     192      SAVE             199,200,202,204,210               
 VEL_ADJUSTFLUX             Subr   190                                                            181,414                           


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 LUMESH.IPIV                I(4)            4     0        1     192                       202                                
 LUMESH.M                   R(8)            8     768      2     2496                      201                                
 RDOM.INTRDR                R(8)            8     10776    1     192                       204,208                            

Page 14          Source Listing                  VEL_ADJUSTFLUX
2023-01-27 11:38                                 ./program/velocity.f90

    215 
    216 
    217 !------------------------------------------------------------------------
    218 !  PPE formulation + influence matrix adjusts to correct bcs.
    219 !------------------------------------------------------------------------
    220    subroutine vel_adjPPE(F)
    221       integer, intent(in) :: F
    222       double precision, save :: A(4,4,0:i_pH1)
    223       double precision, allocatable, save :: U(:,:,:) !i_N,0:i_pH1,6
    224       double precision :: BRe(4,0:i_pH1),BIm(4,0:i_pH1), aR(4),aI(4)
    225       integer :: j
    226       integer :: nh,k,m
    227       
    228       if(F==0) then                             ! precompute, get U
    229          if(.not.allocated(U))  &
    230             allocate( U(i_N,0:i_pH1,6) )
    231          do j = 1, 4
    232             call var_coll_init(c1)
    233             call var_coll_init(c2)
    234             call var_coll_init(c3)
    235             if(j==1) then
    236                c1%Re(i_N,:) = 1d0
    237                call tim_lumesh_invert(0,LDp, c1)
    238                U(:,:,1) = c1%Re
    239             else if(j==2) then
    240                c2%Re(i_N,:) = 1d0
    241                call tim_lumesh_invert(0,LDm, c2)
    242                U(:,:,2) = c2%Re
    243             else if(j==3) then
    244                c3%Im(i_N,:) = 1d0
    245                call tim_lumesh_invert(0,LDz, c3)
    246                U(:,:,3) = c3%Im
    247             else
    248                c1%Re(i_N,:) = -1d0
    249                call tim_lumesh_invert(1,LNp, c1)
    250                call var_coll_grad(c1, c1,c2,c3)
    251                call vel_rt2pm(c1,c2, c1,c2)
    252                U(:,:,4) = c1%Re
    253                U(:,:,5) = c2%Re
    254                U(:,:,6) = c3%Im
    255             end if
    256             call vel_evalBC(c1,c2,c3, BRe,BIm)
    257             A(:,j,:) =  BRe
    258          end do
    259          nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    260             if(k==0 .and. m==0) cycle
    261             call mes_mat_invert(4,A(1,1,nh),4)
    262          end do;  end do
    263 
    264       else if(F==1) then			! get p, project RHS
    265          call vel_pm2rt(vel_ur,vel_ut, c1,c2)
    266          call var_coll_div(c1,c2,vel_uz, c1)
    267          call tim_zerobc(c1)
    268          call tim_lumesh_invert(1,LNp, c1)
    269          call var_coll_grad(c1, c1,c2,c3)
    270          call vel_rt2pm(c1,c2, c1,c2)
    271          call var_coll_sub(c1, vel_ur)

Page 15          Source Listing                  VEL_ADJPPE
2023-01-27 11:38                                 ./program/velocity.f90

    272          call var_coll_sub(c2, vel_ut)
    273          call var_coll_sub(c3, vel_uz)
    274 
    275       else if(F==2) then                        ! correct the BCs
    276          call vel_evalBC(vel_ur,vel_ut,vel_uz, BRe,BIm)
    277          nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    278             if(k==0 .and. m==0) cycle
    279             aR = -matmul(A(:,:,nh),BRe(:,nh))
    280             aI = -matmul(A(:,:,nh),BIm(:,nh))
    281             vel_ur%Re(:,nh) = vel_ur%Re(:,nh) + aR(1)*U(:,nh,1)
    282             vel_ur%Im(:,nh) = vel_ur%Im(:,nh) + aI(1)*U(:,nh,1)
    283             vel_ut%Re(:,nh) = vel_ut%Re(:,nh) + aR(2)*U(:,nh,2)
    284             vel_ut%Im(:,nh) = vel_ut%Im(:,nh) + aI(2)*U(:,nh,2)
    285             vel_uz%Re(:,nh) = vel_uz%Re(:,nh) - aI(3)*U(:,nh,3)
    286             vel_uz%Im(:,nh) = vel_uz%Im(:,nh) + aR(3)*U(:,nh,3)
    287             vel_ur%Re(:,nh) = vel_ur%Re(:,nh) + aR(4)*U(:,nh,4)
    288             vel_ur%Im(:,nh) = vel_ur%Im(:,nh) + aI(4)*U(:,nh,4)
    289             vel_ut%Re(:,nh) = vel_ut%Re(:,nh) + aR(4)*U(:,nh,5)
    290             vel_ut%Im(:,nh) = vel_ut%Im(:,nh) + aI(4)*U(:,nh,5)
    291             vel_uz%Re(:,nh) = vel_uz%Re(:,nh) - aI(4)*U(:,nh,6)
    292             vel_uz%Im(:,nh) = vel_uz%Im(:,nh) + aR(4)*U(:,nh,6)
    293          end do;  end do
    294       end if
    295 
    296    end subroutine vel_adjPPE


ENTRY POINTS

  Name                               
                                     
 velocity_mp_vel_adjppe_             

Page 16          Source Listing                  VEL_ADJPPE
2023-01-27 11:38 Symbol Table                    ./program/velocity.f90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 A                          Local  222      R(8)            8     3     8380416  SAVE             257,261,279,280                   
 AI                         Local  224      R(8)            8     1     4                         280,282,284,285,288,290,291       
 ALLOCATED                  Func   229                                  scalar                    229                               
 AR                         Local  224      R(8)            8     1     4                         279,281,283,286,287,289,292       
 BIM                        Local  224      R(8)            8     2     2095104                   256,276,280                       
 BRE                        Local  224      R(8)            8     2     2095104                   256,257,276,279                   
 C1                         Local  232      COLL            16090       scalar   PRIV,SAVE        78,232,236,237,238,248,249,250,251
                                                            39872                                 ,252,256,265,266,267,268,269,270,2
                                                                                                  71,345,346,398,400                
 C2                         Local  233      COLL            16090       scalar   PRIV,SAVE        78,233,240,241,242,250,251,253,256
                                                            39872                                 ,265,266,269,270,272,345,346,398,4
                                                                                                  01                                
 C3                         Local  234      COLL            16090       scalar   PRIV,SAVE        78,234,244,245,246,250,254,256,269
                                                            39872                                 ,273,345,346                      
 F                          Dummy  220      I(4)            4           scalar   ARG,IN           228,264,275                       
 I_PH1                      Param  222      I(4)            4           scalar                    72,73,74,75,222,224,230,301       
 J                          Local  225      I(4)            4           scalar                    231,235,239,243,257               
 K                          Local  226      I(4)            4           scalar                    259,260,277,278                   
 M                          Local  226      I(4)            4           scalar                    259,260,277,278                   
 MATMUL                     Func   279                                  scalar                    279,280                           
 MES_MAT_INVERT             Subr   261                                                            261                               
 NH                         Local  226      I(4)            4           scalar                    259,261,277,279,280,281,282,283,28
                                                                                                  4,285,286,287,288,289,290,291,292 
 TIM_LUMESH_INVERT          Subr   237                                                            237,241,245,249,268,408,409,410   
 TIM_ZEROBC                 Subr   267                                                            267,405,406,407                   
 U                          Local  223      R(8)            8     3     1        ALC,SAVE         229,230,238,242,246,252,253,254,28
                                                                                                  1,282,283,284,285,286,287,288,289,
                                                                                                  290,291,292                       
 VAR_COLL_DIV               Subr   266                                                            266                               
 VAR_COLL_GRAD              Subr   250                                                            250,269                           
 VAR_COLL_SUB               Subr   271                                                            271,272,273,456,457,458           
 VEL_ADJPPE                 Subr   220                                                            182,403,411                       

Page 17          Source Listing                  VEL_ADJPPE
2023-01-27 11:38                                 ./program/velocity.f90

    297 
    298 !- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    299    subroutine vel_evalBC(up,um,uz, BRe,BIm)
    300       type (coll),      intent(in)  :: up,um,uz
    301       double precision, intent(out) :: BRe(4,0:i_pH1), BIm(4,0:i_pH1)
    302       double precision :: drRe,drIm, urRe,urIm, utRe,utIm, uzRe,uzIm
    303       double precision :: d, s, a_, b(0:i_M*i_Mp)
	.............................1......2             
(1) This variable has not been used.   [S]

(2) This variable has not been used.   [B]

    304       integer :: n,m_
    305       integer :: nh,k,m
    306       
    307       nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    308          if(k==0 .and. m==0) cycle
    309          m_ = m*i_Mp
    310          a_ = d_alpha*k
    311          n = i_N
    312 
    313          urRe =  0.5d0 * (up%Re(n,nh) + um%Re(n,nh))
    314          urIm =  0.5d0 * (up%Im(n,nh) + um%Im(n,nh))
    315          utRe =  0.5d0 * (up%Im(n,nh) - um%Im(n,nh))
    316          utIm = -0.5d0 * (up%Re(n,nh) - um%Re(n,nh))
    317          uzRe =  uz%Re(n,nh)
    318          uzIm =  uz%Im(n,nh)
    319          drRe =  0.5d0 * dot_product(  &
    320             mes_D%dr1(:,1), up%Re(i_N-i_KL:i_N,nh)+um%Re(i_N-i_KL:i_N,nh))
    321          drIm =  0.5d0 * dot_product(  &
    322             mes_D%dr1(:,1), up%Im(i_N-i_KL:i_N,nh)+um%Im(i_N-i_KL:i_N,nh))
    323             
    324          BRe(1,nh) = up%Re(n,nh)
    325          BIm(1,nh) = up%Im(n,nh)
    326          BRe(2,nh) = um%Re(n,nh)
    327          BIm(2,nh) = um%Im(n,nh)
    328          BRe(3,nh) = -uzIm
    329          BIm(3,nh) =  uzRe
    330          d = mes_D%r(n,-1)
    331          BRe(4,nh) = urRe*d + drRe - d*m_*utIm - a_*uzIm
    332          BIm(4,nh) = urIm*d + drIm + d*m_*utRe + a_*uzRe
    333       end do;  end do
    334 
    335    end subroutine vel_evalBC

Page 18          Source Listing                  VEL_EVALBC
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                               
                                     
 velocity_mp_vel_evalbc_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 A_                         Local  303      R(8)            8           scalar                    310,331,332                       
 B                          Local  303      R(8)            8     1     513                                                         
 BIM                        Dummy  299      R(8)            8     2     2095104  ARG,OUT          325,327,329,332                   
 BRE                        Dummy  299      R(8)            8     2     2095104  ARG,OUT          324,326,328,331                   
 D                          Local  303      R(8)            8           scalar                    330,331,332                       
 DOT_PRODUCT                Func   319                                  scalar                    319,321                           
 DRIM                       Local  302      R(8)            8           scalar                    321,332                           
 DRRE                       Local  302      R(8)            8           scalar                    319,331                           
 D_ALPHA                    Local  310      R(8)            8           scalar   SAVE             310,373,491                       
 I_M                        Param  303      I(4)            4           scalar                    303                               
 I_MP                       Param  303      I(4)            4           scalar                    303,309,487                       
 K                          Local  305      I(4)            4           scalar                    307,308,310                       
 M                          Local  305      I(4)            4           scalar                    307,308,309                       
 M_                         Local  304      I(4)            4           scalar                    309,331,332                       
 N                          Local  304      I(4)            4           scalar                    311,313,314,315,316,317,318,324,32
                                                                                                  5,326,327,330                     
 NH                         Local  305      I(4)            4           scalar                    307,313,314,315,316,317,318,320,32
                                                                                                  2,324,325,326,327,328,329,331,332 
 S                          Local  303      R(8)            8           scalar                                                      
 UM                         Dummy  299      COLL            16090       scalar   ARG,IN           313,314,315,316,320,322,326,327   
                                                            39872                                                                   
 UP                         Dummy  299      COLL            16090       scalar   ARG,IN           313,314,315,316,320,322,324,325   
                                                            39872                                                                   
 URIM                       Local  302      R(8)            8           scalar                    314,332                           
 URRE                       Local  302      R(8)            8           scalar                    313,331                           
 UTIM                       Local  302      R(8)            8           scalar                    316,331                           
 UTRE                       Local  302      R(8)            8           scalar                    315,332                           
 UZ                         Dummy  299      COLL            16090       scalar   ARG,IN           317,318                           
                                                            39872                                                                   
 UZIM                       Local  302      R(8)            8           scalar                    318,328,331                       
 UZRE                       Local  302      R(8)            8           scalar                    317,329,332                       
 VEL_EVALBC                 Subr   299                                                            256,276                           


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 RDOM.DR1                   R(8)            8     12512    2     25                        320,322,385                        

Page 19          Source Listing                  VEL_EVALBC
2023-01-27 11:38                                 ./program/velocity.f90

    336 
    337 
    338 !------------------------------------------------------------------------
    339 !  Evaluate in physical space  u  and  curl(u)
    340 !------------------------------------------------------------------------
    341    subroutine vel_transform()
    342       
    343       call tra_coll2phys(vel_ur,vel_r, vel_ut,vel_t, vel_uz,vel_z)
    344 
    345       call var_coll_curl(vel_ur,vel_ut,vel_uz, c1,c2,c3)
    346       call tra_coll2phys(c1,vel_curlr, c2,vel_curlt, c3,vel_curlz)
    347 
    348    end subroutine vel_transform


ENTRY POINTS

  Name                                  
                                        
 velocity_mp_vel_transform_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 TRA_COLL2PHYS              Subr   343                                                            343,346                           
 VAR_COLL_CURL              Subr   345                                                            345                               
 VEL_CURLR                  Local  346      PHYS            36238       scalar   SAVE             346,358,359                       
                                                            78656                                                                   
 VEL_CURLT                  Local  346      PHYS            36238       scalar   SAVE             346,357,359                       
                                                            78656                                                                   
 VEL_CURLZ                  Local  346      PHYS            36238       scalar   SAVE             346,357,358                       
                                                            78656                                                                   
 VEL_R                      Local  343      PHYS            36238       scalar   SAVE             343,358,359,484                   
                                                            78656                                                                   
 VEL_T                      Local  343      PHYS            36238       scalar   SAVE             343,357,359,488                   
                                                            78656                                                                   
 VEL_TRANSFORM              Subr   341                                                                                              
 VEL_Z                      Local  343      PHYS            36238       scalar   SAVE             343,357,358,492                   
                                                            78656                                                                   

Page 20          Source Listing                  VEL_TRANSFORM
2023-01-27 11:38                                 ./program/velocity.f90

    349 
    350 
    351 !-------------------------------------------------------------------------
    352 !  nonlinear terms for velocity
    353 !------------------------------------------------------------------------
    354    subroutine vel_nonlinear()
    355       type (phys) :: p1,p2,p3
    356 ! advection  u x curlu
    357       p1%Re = vel_t%Re*vel_curlz%Re - vel_z%Re*vel_curlt%Re
    358       p2%Re = vel_z%Re*vel_curlr%Re - vel_r%Re*vel_curlz%Re
    359       p3%Re = vel_r%Re*vel_curlt%Re - vel_t%Re*vel_curlr%Re
    360       call tra_phys2coll(p1,vel_Nr, p2,vel_Nt, p3,vel_Nz)
    361       
    362       call vel_addHPF()
    363 
    364    end subroutine vel_nonlinear


ENTRY POINTS

  Name                                  
                                        
 velocity_mp_vel_nonlinear_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 P1                         Local  355      PHYS            36238       scalar                    357,360                           
                                                            78656                                                                   
 P2                         Local  355      PHYS            36238       scalar                    358,360                           
                                                            78656                                                                   
 P3                         Local  355      PHYS            36238       scalar                    359,360                           
                                                            78656                                                                   
 PHYS                       Type   355                                  scalar                    55,56,57,58,59,60,355             
 TRA_PHYS2COLL              Subr   360                                                            360                               
 VEL_NONLINEAR              Subr   354                                                                                              
 VEL_NR                     Local  360      COLL            16090       scalar   SAVE             360,374,375,398,434,451           
                                                            39872                                                                   
 VEL_NT                     Local  360      COLL            16090       scalar   SAVE             360,376,377,398,435,452           
                                                            39872                                                                   
 VEL_NZ                     Local  360      COLL            16090       scalar   SAVE             360,378,380,387,402,436,453       
                                                            39872                                                                   


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 PHYS.RE                    R(8)            8     0        3     45298483                  357,358,359,484,488,492            
                                                                 2                                                            

Page 21          Source Listing                  VEL_NONLINEAR
2023-01-27 11:38                                 ./program/velocity.f90

    365 
    366 !- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    367    subroutine vel_addHPF()
    368       double precision :: a(i_N), b(i_N)
    369       integer :: nh,k,m
    370 ! force from background HPF
    371       b = -vel_Up
    372       nh = -1;    do m = 0, i_M1;     do k = -i_K1, i_K1;      if(k<0 .and. m==0) cycle;      nh = nh  + 1
    373          a = d_alpha*k * vel_U
    374          vel_Nr%Re(:,nh) = vel_Nr%Re(:,nh) + a*vel_ur%Im(:,nh)
    375          vel_Nr%Im(:,nh) = vel_Nr%Im(:,nh) - a*vel_ur%Re(:,nh)
    376          vel_Nt%Re(:,nh) = vel_Nt%Re(:,nh) + a*vel_ut%Im(:,nh)
    377          vel_Nt%Im(:,nh) = vel_Nt%Im(:,nh) - a*vel_ut%Re(:,nh)
    378          vel_Nz%Re(:,nh) = vel_Nz%Re(:,nh) + a*vel_uz%Im(:,nh)  &
    379                                            + b*vel_ur%Re(:,nh) 
    380          vel_Nz%Im(:,nh) = vel_Nz%Im(:,nh) - a*vel_uz%Re(:,nh)  & 
    381                                            + b*vel_ur%Im(:,nh)
    382       end do;  end do
    383 ! additional pressure if fixed flx
    384       if(b_const_flux .and. mpi_rnk==0) then
    385          vel_Pr0 = dot_product(vel_uz%Re(i_N-i_KL:,0),mes_D%dr1(:,1))
    386          vel_Pr0 = vel_Pr0/(-2d0)
    387          vel_Nz%Re(:,0) = vel_Nz%Re(:,0) + 4d0*vel_Pr0/d_Re
    388       end if
    389 
    390    end subroutine vel_addHPF


ENTRY POINTS

  Name                               
                                     
 velocity_mp_vel_addhpf_             

Page 22          Source Listing                  VEL_ADDHPF
2023-01-27 11:38 Symbol Table                    ./program/velocity.f90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 A                          Local  368      R(8)            8     1     192                       373,374,375,376,377,378,380       
 B                          Local  368      R(8)            8     1     192                       371,379,381                       
 DOT_PRODUCT                Func   385                                  scalar                    385                               
 K                          Local  369      I(4)            4           scalar                    372,373                           
 M                          Local  369      I(4)            4           scalar                    372                               
 NH                         Local  369      I(4)            4           scalar                    372,374,375,376,377,378,379,380,38
                                                                                                  1                                 
 VEL_ADDHPF                 Subr   367                                                            362                               

Page 23          Source Listing                  VEL_ADDHPF
2023-01-27 11:38                                 ./program/velocity.f90

    391    
    392 
    393 !------------------------------------------------------------------------
    394 !  Advance equations one timestep.
    395 !------------------------------------------------------------------------
    396    subroutine vel_step()
    397 ! get rhs = A u_ + N
    398       call vel_rt2pm(vel_Nr,vel_Nt, c1,c2)
    399       call vel_rt2pm(ur_,ut_, vel_ur,vel_ut)
    400       call tim_meshmult(1,Ltp,vel_ur,c1,  vel_ur)
    401       call tim_meshmult(1,Ltm,vel_ut,c2,  vel_ut)
    402       call tim_meshmult(0,Ltz,uz_,vel_Nz, vel_uz)
    403       call vel_adjPPE(1)
    404 ! invert
    405       call tim_zerobc(vel_ur)
    406       call tim_zerobc(vel_ut)
    407       call tim_zerobc(vel_uz)
    408       call tim_lumesh_invert(0,LDp, vel_ur)
    409       call tim_lumesh_invert(0,LDm, vel_ut)
    410       call tim_lumesh_invert(0,LDz, vel_uz)
    411       call vel_adjPPE(2)
    412       call vel_pm2rt(vel_ur,vel_ut, vel_ur,vel_ut)
    413 !
    414       call vel_adjustFlux(1)
    415 
    416       if(mpi_rnk==0) then
    417          vel_ur%Re(:,0) = 0d0
    418          vel_ur%Im(:,0) = 0d0
    419          vel_ut%Im(:,0) = 0d0
    420          vel_uz%Im(:,0) = 0d0
    421       end if
    422             
    423    end subroutine vel_step

Page 24          Source Listing                  VEL_STEP
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                             
                                   
 velocity_mp_vel_step_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 TIM_MESHMULT               Subr   400                                                            400,401,402                       
 UR_                        Local  399      COLL            16090       scalar   PRIV,SAVE        76,399,431                        
                                                            39872                                                                   
 UT_                        Local  399      COLL            16090       scalar   PRIV,SAVE        76,399,432                        
                                                            39872                                                                   
 UZ_                        Local  402      COLL            16090       scalar   PRIV,SAVE        76,402,433                        
                                                            39872                                                                   
 VEL_STEP                   Subr   396                                                            437,454                           

Page 25          Source Listing                  VEL_STEP
2023-01-27 11:38                                 ./program/velocity.f90

    424    
    425    
    426 !------------------------------------------------------------------------
    427 !  predictor with euler nonlinear terms
    428 !------------------------------------------------------------------------
    429    subroutine vel_predictor()
    430 
    431       call var_coll_copy(vel_ur, ur_)
    432       call var_coll_copy(vel_ut, ut_)
    433       call var_coll_copy(vel_uz, uz_)
    434       call var_coll_copy(vel_Nr, Nr_)
    435       call var_coll_copy(vel_Nt, Nt_)
    436       call var_coll_copy(vel_Nz, Nz_)
    437       call vel_step()
    438       
    439    end subroutine vel_predictor


ENTRY POINTS

  Name                                  
                                        
 velocity_mp_vel_predictor_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 NR_                        Local  434      COLL            16090       scalar   PRIV,SAVE        76,434,451                        
                                                            39872                                                                   
 NT_                        Local  435      COLL            16090       scalar   PRIV,SAVE        76,435,452                        
                                                            39872                                                                   
 NZ_                        Local  436      COLL            16090       scalar   PRIV,SAVE        76,436,453                        
                                                            39872                                                                   
 VAR_COLL_COPY              Subr   431                                                            431,432,433,434,435,436,448,449,45
                                                                                                  0                                 
 VEL_PREDICTOR              Subr   429                                                                                              

Page 26          Source Listing                  VEL_PREDICTOR
2023-01-27 11:38                                 ./program/velocity.f90

    440 
    441 
    442 !------------------------------------------------------------------------
    443 !  corrector iteration with Crank-Nicolson non-lin term
    444 !------------------------------------------------------------------------
    445    subroutine vel_corrector()
    446       type (coll) :: r,t,z
    447 
    448       call var_coll_copy(vel_ur, r)
    449       call var_coll_copy(vel_ut, t)
    450       call var_coll_copy(vel_uz, z)
    451       call tim_nlincorr(Nr_, vel_Nr)
    452       call tim_nlincorr(Nt_, vel_Nt)
    453       call tim_nlincorr(Nz_, vel_Nz)
    454       call vel_step()
    455 
    456       call var_coll_sub(vel_ur, r)
    457       call var_coll_sub(vel_ut, t)
    458       call var_coll_sub(vel_uz, z)
    459       call tim_measurecorr(r,t,z)
    460 
    461    end subroutine vel_corrector


ENTRY POINTS

  Name                                  
                                        
 velocity_mp_vel_corrector_             

Page 27          Source Listing                  VEL_CORRECTOR
2023-01-27 11:38 Symbol Table                    ./program/velocity.f90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 R                          Local  446      COLL            16090       scalar                    448,456,459                       
                                                            39872                                                                   
 T                          Local  446      COLL            16090       scalar                    449,457,459                       
                                                            39872                                                                   
 TIM_MEASURECORR            Subr   459                                                            459                               
 TIM_NLINCORR               Subr   451                                                            451,452,453                       
 VEL_CORRECTOR              Subr   445                                                                                              
 Z                          Local  446      COLL            16090       scalar                    450,458,459                       
                                                            39872                                                                   

Page 28          Source Listing                  VEL_CORRECTOR
2023-01-27 11:38                                 ./program/velocity.f90

    462 
    463    
    464 !------------------------------------------------------------------------
    465 !  get cfl max dt due to flow field
    466 !------------------------------------------------------------------------
    467    subroutine vel_maxtstep()
    468       double precision :: d,mx, dt(3),dt_(3), r(i_N)
	......................................1              
(1) This variable has not been used.   [DT_]

    469       integer :: n, n__
    470 
    471       r = mes_D%r(:,1)
    472       dt = 1d99
    473 
    474       do n = 1, mes_D%pN
    475          n__ = n+mes_D%pNi-1
    476 
    477          if(n__==1) then
    478             d = r(2) - r(1)
    479          else if(n__==i_N) then
    480             d = r(i_N) - r(i_N-1)
    481          else
    482             d = min( r(n__)-r(n__-1), r(n__+1)-r(n__) )
    483          end if
    484          mx = maxval( dabs(vel_r%Re(:,:,n)) )
    485          if(mx/=0d0) dt(1) = min( dt(1), d/mx )
    486 
    487          d = 2d0*d_PI/dble(i_Th*i_Mp) 		!---  *r_(n)? ---
    488          mx = maxval( dabs(vel_t%Re(:,:,n)) )
    489          if(mx/=0d0) dt(2) = min( dt(2), d/mx )
    490 
    491          d = 2d0*d_PI/(d_alpha*i_Z)
    492          mx = maxval( dabs(vel_z%Re(:,:,n) + vel_U(n__)) )
    493          if(mx/=0d0) dt(3) = min( dt(3), d/mx )
    494       end do
    495 
    496 # 459
    497 
    498       tim_cfl_dt = minval(dt)
    499       if(tim_cfl_dt==dt(1)) tim_cfl_dir=1
    500       if(tim_cfl_dt==dt(2)) tim_cfl_dir=2
    501       if(tim_cfl_dt==dt(3)) tim_cfl_dir=3
    502       
    503    end subroutine vel_maxtstep

Page 29          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38 Entry Points                    ./program/velocity.f90



ENTRY POINTS

  Name                                 
                                       
 velocity_mp_vel_maxtstep_             


SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 D                          Local  468      R(8)            8           scalar                    478,480,482,485,487,489,491,493   
 DABS                       Func   484                                  scalar                    484,488,492                       
 DBLE                       Func   487                                  scalar                    487                               
 DT                         Local  468      R(8)            8     1     3                         472,485,489,493,498,499,500,501   
 DT_                        Local  468      R(8)            8     1     3                                                           
 D_PI                       Param  487      R(8)            8           scalar                    487,491                           
 I_TH                       Param  487      I(4)            4           scalar                    487                               
 I_Z                        Param  491      I(4)            4           scalar                    491                               
 MAXVAL                     Func   484                                  scalar                    484,488,492                       
 MIN                        Func   482                                  scalar                    482,485,489,493                   
 MINVAL                     Func   498                                  scalar                    498                               
 MX                         Local  468      R(8)            8           scalar                    484,485,488,489,492,493           
 N                          Local  469      I(4)            4           scalar                    474,475,484,488,492               
 N__                        Local  469      I(4)            4           scalar                    475,477,479,482,492               
 R                          Local  468      R(8)            8     1     192                       471,478,480,482                   
 TIM_CFL_DIR                Local  499      I(4)            4           scalar   SAVE             499,500,501                       
 TIM_CFL_DT                 Local  498      R(8)            8           scalar   SAVE             498,499,500,501                   
 VEL_MAXTSTEP               Subr   467                                                                                              


TYPE COMPONENTS/COMMON VARIABLES

 Name                       Type            Bytes Offset   Dimen Elements Attributes       References                         
                                                                                                                              
 RDOM.PN                    I(4)            4     8              scalar                    474                                
 RDOM.PNI                   I(4)            4     4              scalar                    475                                

Page 30          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38 Symbol Table                    ./program/velocity.f90



SYMBOL CROSS REFERENCE

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 LUMESH                     Type   72                                   scalar                    72,73                             
 MESH                       Type   74                                   scalar                    74,75                             
 TIMESTEP                   Module 51                                                             51                                
 TRANSFORM                  Module 50                                                             50                                
 VARIABLES                  Module 49                                                             49                                
 VELOCITY                   Module 47                                                                                               

Page 31          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38                                 ./program/velocity.f90

    504 
    505 
    506 !*************************************************************************
    507  end module velocity
    508 !*************************************************************************

Page 32          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38 Subprograms/Common Blocks       ./program/velocity.f90



SUBPROGRAMS/COMMON BLOCKS

 Name                       Object Declared Type            Bytes Dimen Elements Attributes       References                        
                                                                                                                                    
 VELOCITY                   Module 47                                                                                               
 VEL_ADDHPF                 Subr   367                                                            362                               
 VEL_ADJPPE                 Subr   220                                                            182,403,411                       
 VEL_ADJUSTFLUX             Subr   190                                                            181,414                           
 VEL_CORRECTOR              Subr   445                                                                                              
 VEL_EVALBC                 Subr   299                                                            256,276                           
 VEL_IMPOSESYM              Subr   99                                                                                               
 VEL_MATRICES               Subr   158                                                                                              
 VEL_MAXTSTEP               Subr   467                                                                                              
 VEL_NONLINEAR              Subr   354                                                                                              
 VEL_PM2RT                  Subr   136                                                            265,412                           
 VEL_PRECOMPUTE             Subr   85                                                                                               
 VEL_PREDICTOR              Subr   429                                                                                              
 VEL_RT2PM                  Subr   118                                                            251,270,398,399                   
 VEL_STEP                   Subr   396                                                            437,454                           
 VEL_TRANSFORM              Subr   341                                                                                              

COMPILER OPTIONS BEING USED

       -align noall                          -align nonone
       -align nocommons                      -align nodcommons
       -align noqcommons                     -align nozcommons
       -align records                        -align nosequence
       -align norec1byte                     -align norec2byte
       -align norec4byte                     -align norec8byte
       -align norec16byte                    -align norec32byte
       -align norec64byte                    -align noarray8byte
       -align noarray16byte                  -align noarray32byte
       -align noarray64byte                  -align noarray128byte
       -align noarray256byte                 -altparam
       -assume accuracy_sensitive            -assume nobscc
       -assume nobuffered_io                 -assume nobuffered_stdout
       -assume nobyterecl                    -assume nocontiguous_assumed_shape
       -assume nocontiguous_pointer          -assume nocc_omp
       -assume nocstring                     -assume nodummy_aliases
       -assume nofailed_images               -assume nofpe_summary
       -assume noieee_compares               -assume noieee_fpe_flags
       -assume nominus0                      -assume noold_boz
       -assume old_complex_align             -assume old_unit_star
       -assume old_inquire_recl              -assume old_ldout_format
       -assume old_ldout_zero                -assume noold_logical_assign
       -assume noold_logical_ldio            -assume old_maxminloc
       -assume old_xor                       -assume noprotect_allocates
       -assume protect_constants             -assume noprotect_parens
       -assume realloc_lhs                   -assume norecursion
       -assume split_common                  -assume source_include
       -assume nostd_intent_in               -assume std_minus0_rounding
       -assume nostd_mod_proc_name           -assume std_value
       -assume underscore                    -assume no2underscores
  no   -auto                                 -auto_scalar
  no   -bintext                              -ccdefault default

Page 33          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38                                 ./program/velocity.f90

       -check arg_temp_created               -check assume
       -check bounds                         -check contiguous
       -check format                         -check output_conversion
       -check overflow                       -check pointers
       -check shape                          -check stack
       -check teams                          -check uninitialized
       -check udio_iostat                    -coarray-num-procs 0
  no   -coarray-config-file                  -convert native
       -cross_reference                      -D __INTEL_COMPILER=2021
       -D __INTEL_COMPILER_UPDATE=4          -D __unix__
       -D __unix                             -D __linux__
       -D __linux                            -D __gnu_linux__
       -D unix                               -D linux
       -D __ELF__                            -D __x86_64
       -D __x86_64__                         -D __amd64
       -D __amd64__                          -D __INTEL_COMPILER_BUILD_DATE=20210910
       -D __PIC__                            -D __pic__
       -D __INTEL_OFFLOAD                    -D __MMX__
       -D __SSE__                            -D __SSE_MATH__
       -D __SSE2__                           -D __SSE2_MATH__
       -D __pentium4                         -D __pentium4__
       -D __tune_pentium4__                  -double_size 64
  no   -d_lines                         no   -Qdyncom
       -error_limit 30                  no   -f66
  no   -f77rtl                          no   -fast
       -fpscomp nofilesfromcmd               -fpscomp nogeneral
       -fpscomp noioformat                   -fpscomp noldio_spacing
       -fpscomp nologicals              no   -fpconstant
       -fpe0                                 -fprm nearest
  no   -ftz                                  -fp_model noprecise
       -fp_model fast                        -fp_model nostrict
       -fp_model nosource                    -fp_model nodouble
       -fp_model noextended                  -fp_model novery_fast
       -fp_model noexcept                    -fp_model nono_except
       -fp_modbits nofp_contract             -fp_modbits nono_fp_contract
       -fp_modbits nofenv_access             -fp_modbits nono_fenv_access
       -fp_modbits nocx_limited_range        -fp_modbits nono_cx_limited_range
       -fp_modbits noprec_div                -fp_modbits nono_prec_div
       -fp_modbits noprec_sqrt               -fp_modbits nono_prec_sqrt
       -fp_modbits noftz                     -fp_modbits nono_ftz
       -fp_modbits nointrin_limited_range       -fp_modbits nono_intrin_limited_range
       -fp_modbits notrunc_compares          -fp_modbits nono_trunc_compares
       -fp_modbits noieee_nan_compares       -fp_modbits nono_ieee_nan_compares
       -fp_modbits honor_f32_conversion       -fp_modbits nono_honor_f32_conversion
       -fp_modbits honor_f64_conversion       -fp_modbits nono_honor_f64_conversion
       -fp_modbits nono_x87_copy             -fp_modbits nono_no_x87_copy
       -fp_modbits noexception_semantics       -fp_modbits nono_exception_semantics
       -fp_modbits noprecise_libm_functions       -fp_modbits nono_precise_libm_functions
       -heap_arrays 0                   no   -threadprivate_compat
       -free                                 -g2
       -iface nomixed_str_len_arg            -iface nono_mixed_str_len_arg
       -init noarrays                        -init nohuge
       -init noinfinity                      -init nominus_huge
       -init nominus_infinity                -init nominus_tiny
       -init nonan                           -init nosnan
       -init notiny                          -init nozero
  no   -intconstant                          -integer_size 32

Page 34          Source Listing                  VEL_MAXTSTEP
2023-01-27 11:38                                 ./program/velocity.f90

  no   -mixed_str_len_arg               no   -module
       -names lowercase                 no   -noinclude
  no   -o                                    -offload-build=host
       -O0                              no   -pad_source
       -real_size 32                    no   -recursive
       -reentrancy threaded                  -vec=simd
       -show nofullpath                      -show noinclude
       -show map                             -show options
  no   -syntax_only                     no   -threadcom
  no   -U                               no   -vms
       -w noall                              -w nonone
       -w alignments                         -w nodeclarations
       -w noexternals                        -w general
       -w noignore_bounds                    -w noignore_loc
       -w nointerfaces                       -w noshape
       -w notruncated_source                 -w uncalled
       -w uninitialized                      -w unused
       -w usage                         no   -wrap-margins

       -includepath : /home/intel/oneapi/mpi/2021.4.0//include/,/home/intel/oneapi/dpl/2021.5.0/linux/include/,/home/intel/oneapi/compiler/2021.4.0/linux/include/,
           /usr/local/include/,.f90,./program/.f90,./.f90,/home/intel/oneapi/vpl/2021.6.0/include/.f90,/home/intel/oneapi/tbb/2021.4.0/env/../include/.f90,
           /home/intel/oneapi/mpi/2021.4.0//include/.f90,/home/intel/oneapi/mkl/2021.4.0/include/.f90,/home/intel/oneapi/ipp/2021.4.0/include/.f90,
           /home/intel/oneapi/ippcp/2021.4.0/include/.f90,/home/intel/oneapi/ipp/2021.4.0/include/.f90,/home/intel/oneapi/dpl/2021.5.0/linux/include/.f90,
           /home/intel/oneapi/dpcpp-ct/2021.4.0/include/.f90,/home/intel/oneapi/dnnl/2021.4.0/cpu_dpcpp_gpu_dpcpp/lib/.f90,
           /home/intel/oneapi/dev-utilities/2021.4.0/include/.f90,/home/intel/oneapi/dal/2021.4.0/include/.f90,/home/intel/oneapi/compiler/2021.4.0/linux/include/.f90,
           /home/intel/oneapi/ccl/2021.4.0/include/cpu_gpu_dpcpp/.f90,/home/intel/oneapi/compiler/2021.4.0/linux/bin/intel64/../../compiler/include/intel64/.f90,
           /home/intel/oneapi/compiler/2021.4.0/linux/bin/intel64/../../compiler/include/icc/.f90,/home/intel/oneapi/compiler/2021.4.0/linux/bin/intel64/../../compiler/include/.f90,
           /usr/local/include/.f90,/usr/lib/gcc/x86_64-linux-gnu/9/include/.f90,/usr/include/.f90,/usr/include/.f90,
           /usr/include/x86_64-linux-gnu/.f90,/usr/include/.f90
       -list filename : velocity.lst
  no   -o

COMPILER: Intel(R) Fortran 2021.4.0-2742
